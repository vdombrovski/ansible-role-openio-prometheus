---
- name: "Init variables"
  set_fact:
    tmp_cached_node_admin_ip: {}
    tmp_cached_node_data_ip: {}
    tmp_cached_inventories: {}
    tmp_cached_inventory: {}
    tmp_cached_hostnames: {}
    tmp_cached_oiofs_endpoints: {}
    tmp_cached_namespace: ""
  tags: configure

- name: "Register data IP of monitored node"
  set_fact:
    prometheus_node_data_ip: "\
      {{ hostvars[inventory_hostname]['openio_bind_address'] }}"
  when: inventory_hostname in prometheus_monitored_hosts
  tags: configure

- name: "Register admin IP of monitored node (with mgmt interface)"
  set_fact:
    prometheus_node_admin_ip: "\
        {{ hostvars[inventory_hostname].get('openio_bind_mgmt_address',
  hostvars[inventory_hostname]['ansible_' + openio_bind_mgmt_interface]['ipv4']['address']) }}"
  when:
    - inventory_hostname in prometheus_monitored_hosts
    - openio_bind_mgmt_interface is defined
  tags: configure

- name: "Register admin IP of monitored node (default)"
  set_fact:
    prometheus_node_admin_ip: "{{ hostvars[inventory_hostname].get('openio_bind_mgmt_address',
  hostvars[inventory_hostname]['openio_bind_address']) }}"
  when:
    - inventory_hostname in prometheus_monitored_hosts
    - openio_bind_mgmt_interface is not defined
  tags: configure

- name: "Register IP of admin node (with mgmt interface)"
  set_fact:
    prometheus_admin_ip: "\
      {{ hostvars[inventory_hostname].get('openio_bind_mgmt_address',\
hostvars[inventory_hostname]['ansible_' + openio_bind_mgmt_interface]['ipv4']['address']) }}"
  when:
    - inventory_hostname in prometheus_admin_hosts
    - openio_bind_mgmt_interface is defined
  tags: configure

- name: "Register IP of admin node (default)"
  set_fact:
    prometheus_admin_ip: "\
      {{ hostvars[inventory_hostname].get('openio_bind_mgmt_address',
hostvars[inventory_hostname]['openio_bind_address']) }}"
  when:
    - inventory_hostname in prometheus_admin_hosts
    - openio_bind_mgmt_interface is not defined
  tags: configure

- name: Cache hostnames
  set_fact:
    tmp_cached_hostnames: "{{ tmp_cached_hostnames | combine({item: hostvars[item]['ansible_nodename']}) }}"
  with_items: "{{ prometheus_monitored_hosts }}"
  when: inventory_hostname in prometheus_admin_hosts
  tags: configure

- name: Cache oiofs endpoints
  set_fact:
    tmp_cached_oiofs_endpoints: "{{ tmp_cached_oiofs_endpoints | combine(
{hostvars[item]['ansible_nodename']: hostvars[item]['oiofs_mountpoints']}) }}"
  with_items: "{{ prometheus_oiofs_hosts }}"
  when: inventory_hostname in prometheus_admin_hosts
  tags: configure

- name: Cache host data
  set_fact:
    tmp_cached_node_admin_ip: "{{ tmp_cached_node_admin_ip |\
     combine({item.value: hostvars[item.key]['prometheus_node_admin_ip']}) }}"
    tmp_cached_node_data_ip: "{{ tmp_cached_node_data_ip |\
     combine({item.value: hostvars[item.key]['prometheus_node_data_ip']}) }}"
    tmp_cached_inventories: "{{ tmp_cached_inventories | combine({item.value: 'inventory-' + item.key }) }}"
  with_dict:
    - "{{ tmp_cached_hostnames }}"
  when: inventory_hostname in prometheus_admin_hosts
  tags: configure

- name: "Cache admin IP and 'namespace' (for Jinja2)"
  set_fact:
    tmp_cached_admin_ip: "{{ prometheus_admin_ip }}"
    tmp_cached_namespace: "{{ prometheus_openio_namespace }}"
  when: inventory_hostname in prometheus_admin_hosts

- name: Create temporary inventory directory
  local_action:
    module: tempfile
    state: directory
    suffix: inventory
  register: inv_dir
  run_once: true
  changed_when: false
  tags: configure
  become: false

- name: "Fetch inventories"
  fetch:
    src: "/etc/oio/sds/{{ prometheus_openio_namespace }}/inventory.yml"
    dest: "{{ inv_dir.path }}/{{ prometheus_openio_namespace }}/{{ ansible_nodename }}.yml"
    flat: true
  changed_when: false
  when: inventory_hostname in prometheus_monitored_hosts
  tags: configure

- name: "Load inventories as facts"
  include_vars:
    file: "{{ inv_dir.path }}/{{ tmp_cached_namespace }}/{{ item.key }}.yml"
    name: "{{ item.value }}"
  with_dict: "{{ tmp_cached_inventories }}"
  when:
    - not ansible_check_mode
    - inventory_hostname in prometheus_admin_hosts
  tags: configure

- name: "Consolidate inventories into single dict"
  set_fact:
    tmp_cached_inventory: "{{ tmp_cached_inventory |\
      combine({item.key: hostvars[inventory_hostname][item.value]}) }}"
  with_dict: "{{ tmp_cached_inventories }}"
  when:
    - not ansible_check_mode
    - inventory_hostname in prometheus_admin_hosts

- name: "Generate healthchecks"
  template:
    src: blackbox.yml.j2
    dest: "{{ prometheus_conf_dir }}/targets/blackbox.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
  when:
    - inventory_hostname in prometheus_admin_hosts
    - prometheus_monitored_hosts | length > 1
  register: _prometheus_healthchecks
  tags: configure
...
